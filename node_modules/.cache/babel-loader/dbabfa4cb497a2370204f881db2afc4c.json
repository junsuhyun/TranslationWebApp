{"remainingRequest":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\lib\\translator.js","dependencies":[{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\lib\\translator.js","mtime":1617434216749},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\lib\\translator.js"],"names":["AudioConfig","SpeechTranslationConfig","TranslationRecognizer","ResultReason","Translator","callback","_callback","options","alreadyStarted","_recognizer","stopContinuousRecognitionAsync","audioConfig","fromDefaultMicrophoneInput","speechConfig","fromSubscription","key","region","speechRecognitionLanguage","fromLanguage","toLanguages","lang","addTargetLanguage","recognizing","recognized","recognizerCallback","bind","startContinuousRecognitionAsync","s","e","result","reason","captions","offset","languages","getLanguageCode","text","langCode","caption","translations","get","original","substring","stopRecognizer","err","console","error","close","undefined","log"],"mappings":"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","sourcesContent":["import { \n  AudioConfig, SpeechTranslationConfig, TranslationRecognizer, ResultReason \n} from 'microsoft-cognitiveservices-speech-sdk'\n\nclass Translator {\n  constructor(callback) {\n    this._callback = callback\n  }\n\n  start(options) {\n    const alreadyStarted = !!this._recognizer\n    if (alreadyStarted) {\n      this._recognizer.stopContinuousRecognitionAsync()\n    }\n\n    const audioConfig = AudioConfig.fromDefaultMicrophoneInput()\n    const speechConfig = SpeechTranslationConfig.fromSubscription(options.key, options.region)\n\n    speechConfig.speechRecognitionLanguage = options.fromLanguage\n    for (const lang of options.toLanguages) {\n      speechConfig.addTargetLanguage(lang)\n    }\n\n    this._recognizer = new TranslationRecognizer(speechConfig, audioConfig)\n    this._recognizer.recognizing = this._recognizer.recognized = recognizerCallback.bind(this)\n    this._recognizer.startContinuousRecognitionAsync()\n\n    async function recognizerCallback(s, e) {\n      const result = e.result\n      const reason = ResultReason[result.reason]\n      if (reason !== 'TranslatingSpeech' && reason !== 'TranslatedSpeech') {\n        return\n      }\n\n      const captions = {\n        offset: result.offset,\n        languages: {}\n      }\n      captions.languages[getLanguageCode(options.fromLanguage)] = result.text\n\n      for (const lang of options.toLanguages) {\n        const langCode = getLanguageCode(lang)\n        const caption = result.translations.get(langCode)\n        captions.languages[langCode] = caption\n      }\n\n      await this._callback({\n        original: result.text,\n        translations: captions\n      })\n    }\n\n    function getLanguageCode(lang) {\n      return lang.substring(0, 2)\n    }\n  }\n  \n  stop() {\n    if (this._recognizer) {\n      this._recognizer.stopContinuousRecognitionAsync(\n        stopRecognizer.bind(this),\n        function (err) {\n          stopRecognizer().bind(this)\n          console.error(err)\n        }.bind(this)\n      )\n    }\n\n    function stopRecognizer() {\n      this._recognizer.close()\n      this._recognizer = undefined\n      console.log('stopped')\n    }\n  }\n}\n\nexport default Translator"]}]}