{"remainingRequest":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\views\\CaptionJoin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\views\\CaptionJoin.vue","mtime":1606393365000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCBjb25zdGFudHMgZnJvbSAnLi4vbGliL2NvbnN0YW50cycKaW1wb3J0ICogYXMgc2lnbmFsUiBmcm9tICdAbWljcm9zb2Z0L3NpZ25hbHInCmltcG9ydCBsYW5ndWFnZUxpc3RNaXhpbiBmcm9tICcuLi9saWIvbGFuZ3VhZ2UtbGlzdC1taXhpbicKCmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFsgbGFuZ3VhZ2VMaXN0TWl4aW4gXSwKICBwcm9wczogewogICAgY2xpZW50SWQ6IFN0cmluZwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvZGU6ICcnLAogICAgICBjYXB0aW9uczogW10sCiAgICAgIGNhcHRpb25zTWFwOiB7fSwKICAgICAgdG9MYW5ndWFnZUNvZGU6ICdlbicsCiAgICAgIG1lZXRpbmdJZDogbnVsbCwKICAgICAgbWVldGluZ1Bhc3N3b3JkOiBudWxsLAogICAgICBqb2luZWQ6IGZhbHNlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgdG9MYW5ndWFnZUNvZGVzKCkgewogICAgICByZXR1cm4gdGhpcy50b0xhbmd1YWdlcy5tYXAobCA9PiBsLnN1YnN0cmluZygwLCAyKSkuc29ydCgpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBqb2luKCkgewogICAgICB0aGlzLmNvbm5lY3Rpb24gPSBuZXcgc2lnbmFsUi5IdWJDb25uZWN0aW9uQnVpbGRlcigpCiAgICAgICAgLndpdGhVcmwoYCR7Y29uc3RhbnRzLmFwaUJhc2VVcmx9L2FwaS8ke3RoaXMuY2xpZW50SWR9LyR7dGhpcy5tZWV0aW5nSWR9LyR7dGhpcy5tZWV0aW5nUGFzc3dvcmR9YCkKICAgICAgICAud2l0aEF1dG9tYXRpY1JlY29ubmVjdCgpCiAgICAgICAgLmJ1aWxkKCkKCiAgICAgIHRoaXMuY29ubmVjdGlvbi5vbignbmV3Q2FwdGlvbicsIG9uTmV3Q2FwdGlvbi5iaW5kKHRoaXMpKQoKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLmNvbm5lY3Rpb24uc3RhcnQoKQogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgYWxlcnQoJ0Nvbm5lY3Rpb24gZmFpbGVkLiBWZXJpZnkgdGhlIG1lZXRpbmcgaWQgYW5kIHBhc3N3b3JkIGFuZCB0cnkgYWdhaW4uJykKICAgICAgfQoKICAgICAgY29uc29sZS5sb2coJ2Nvbm5lY3Rpb24gc3RhcnRlZCcpCiAgICAgIHRoaXMuam9pbmVkID0gdHJ1ZQogICAgICBhd2FpdCB0aGlzLnVwZGF0ZUxhbmd1YWdlU3Vic2NyaXB0aW9uKHRoaXMudG9MYW5ndWFnZUNvZGUpCgogICAgICBmdW5jdGlvbiBvbk5ld0NhcHRpb24oY2FwdGlvbikgewogICAgICAgIGxldCBsb2NhbENhcHRpb24gPSB0aGlzLmNhcHRpb25zTWFwW2NhcHRpb24ub2Zmc2V0XQogICAgICAgIGlmICghbG9jYWxDYXB0aW9uKSB7CiAgICAgICAgICBsb2NhbENhcHRpb24gPSB0aGlzLmNhcHRpb25zTWFwW2NhcHRpb24ub2Zmc2V0XSA9IHsKICAgICAgICAgICAgb2Zmc2V0OiBjYXB0aW9uLm9mZnNldCwKICAgICAgICAgICAgdGV4dDogJycKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuY2FwdGlvbnMucHVzaChsb2NhbENhcHRpb24pCiAgICAgICAgfQogICAgICAgIGxvY2FsQ2FwdGlvbi50ZXh0ID0gY2FwdGlvbi50ZXh0CgogICAgICAgIFZ1ZS5uZXh0VGljayhmdW5jdGlvbigpIHsKICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCBkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0KQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICBhc3luYyB1cGRhdGVMYW5ndWFnZVN1YnNjcmlwdGlvbihsYW5ndWFnZUNvZGUpIHsgICAgICAgIAogICAgICBhd2FpdCBheGlvcy5wb3N0KGAke2NvbnN0YW50cy5hcGlCYXNlVXJsfS9hcGkvc2VsZWN0bGFuZ3VhZ2U/bWVldGluZ0lkPSR7dGhpcy5tZWV0aW5nSWR9YCwgewogICAgICAgIGxhbmd1YWdlQ29kZSwKICAgICAgICB1c2VySWQ6IHRoaXMuY2xpZW50SWQKICAgICAgfSkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB0b0xhbmd1YWdlQ29kZTogewogICAgICBoYW5kbGVyKCkgewogICAgICAgIHJldHVybiB0aGlzLnVwZGF0ZUxhbmd1YWdlU3Vic2NyaXB0aW9uKHRoaXMudG9MYW5ndWFnZUNvZGUpCiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMubWVldGluZ0lkID0gdGhpcy4kcm91dGUucGFyYW1zLm1lZXRpbmdJZAogIH0sCiAgYXN5bmMgYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICh0aGlzLmNvbm5lY3Rpb24pIHsKICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoWwogICAgICAgIHRoaXMuY29ubmVjdGlvbi5zdG9wKCksCiAgICAgICAgdGhpcy51cGRhdGVMYW5ndWFnZVN1YnNjcmlwdGlvbihudWxsKQogICAgICBdKQogICAgICBjb25zb2xlLmxvZygnY29ubmVjdGlvbiBzdG9wcGVkJykKICAgIH0KICB9Cn0K"},{"version":3,"sources":["CaptionJoin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CaptionJoin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"caption-join\">\n    <div v-if=\"!joined\">\n      <div><input type=\"password\" v-model=\"meetingPassword\" placeholder=\"Meeting Password\" /></div>\n      <button @click=\"join\">Join</button>\n    </div>\n    <div v-else>\n      <div id=\"language-select\">\n        <select v-model=\"toLanguageCode\">\n          <option v-for=\"lang in toLanguageCodes\" :value=\"lang\" :key=\"lang\">\n            {{ lang }}\n          </option>\n        </select>\n      </div>\n      <div id=\"captions-text\" class=\"caption\">\n        <div v-for=\"caption in captions\" :key=\"caption.offset\">{{ caption.text }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport axios from 'axios'\nimport constants from '../lib/constants'\nimport * as signalR from '@microsoft/signalr'\nimport languageListMixin from '../lib/language-list-mixin'\n\nexport default {\n  mixins: [ languageListMixin ],\n  props: {\n    clientId: String\n  },\n  data() {\n    return {\n      code: '',\n      captions: [],\n      captionsMap: {},\n      toLanguageCode: 'en',\n      meetingId: null,\n      meetingPassword: null,\n      joined: false\n    }\n  },\n  computed: {\n    toLanguageCodes() {\n      return this.toLanguages.map(l => l.substring(0, 2)).sort()\n    }\n  },\n  methods: {\n    async join() {\n      this.connection = new signalR.HubConnectionBuilder()\n        .withUrl(`${constants.apiBaseUrl}/api/${this.clientId}/${this.meetingId}/${this.meetingPassword}`)\n        .withAutomaticReconnect()\n        .build()\n\n      this.connection.on('newCaption', onNewCaption.bind(this))\n\n      try {\n        await this.connection.start()\n      } catch (e) {\n        alert('Connection failed. Verify the meeting id and password and try again.')\n      }\n\n      console.log('connection started')\n      this.joined = true\n      await this.updateLanguageSubscription(this.toLanguageCode)\n\n      function onNewCaption(caption) {\n        let localCaption = this.captionsMap[caption.offset]\n        if (!localCaption) {\n          localCaption = this.captionsMap[caption.offset] = {\n            offset: caption.offset,\n            text: ''\n          }\n          this.captions.push(localCaption)\n        }\n        localCaption.text = caption.text\n\n        Vue.nextTick(function() {\n          window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight)\n        })\n      }\n    },\n    async updateLanguageSubscription(languageCode) {        \n      await axios.post(`${constants.apiBaseUrl}/api/selectlanguage?meetingId=${this.meetingId}`, {\n        languageCode,\n        userId: this.clientId\n      })\n    }\n  },\n  watch: {\n    toLanguageCode: {\n      handler() {\n        return this.updateLanguageSubscription(this.toLanguageCode)\n      },\n      immediate: true\n    }\n  },\n  mounted() {\n    this.meetingId = this.$route.params.meetingId\n  },\n  async beforeDestroy() {\n    if (this.connection) {\n      await Promise.all([\n        this.connection.stop(),\n        this.updateLanguageSubscription(null)\n      ])\n      console.log('connection stopped')\n    }\n  }\n}\n</script>\n\n<style scoped>\n#language-select {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  padding-top: 120px;\n  padding-bottom: 6px;\n  background-color: white;\n}\n\n#captions-text {\n  padding-top: 140px;\n  padding-bottom: 60px\n}\n</style>\n"]}]}