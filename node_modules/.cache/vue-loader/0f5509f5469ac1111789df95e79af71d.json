{"remainingRequest":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\views\\CaptionHost.vue?vue&type=style&index=0&id=43329d38&scoped=true&lang=css&","dependencies":[{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\src\\views\\CaptionHost.vue","mtime":1606393365000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\caption\\captionr-static-web-app-main (1)\\captionr-static-web-app-main\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW5wdXRbdHlwZT1wYXNzd29yZF0gewogIHdpZHRoOiA2MDBweDsKfQo="},{"version":3,"sources":["CaptionHost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA","file":"CaptionHost.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"caption-host\">\n    <div>\n      <div>Meeting join link: <code>{{ `${origin}/join/${meetingId}` }}</code></div>\n      <div>Meeting password: <code>{{ meetingPassword }}</code></div>\n    </div>\n    <div v-if=\"!started\">\n      <h1>Host a session</h1>\n      <div><input type=\"password\" v-model=\"key\" placeholder=\"Cognitive Services Speech API Key\" /></div>\n      <div>\n        <input type=\"text\" v-model=\"region\" placeholder=\"Speech API region\" />\n        <select v-model=\"fromLanguage\">\n          <option v-for=\"lang in fromLanguages\" :value=\"lang\" :key=\"lang\">\n            {{ lang }}\n          </option>\n        </select>\n        <button @click=\"start\">start</button>\n      </div>\n    </div>\n    <div v-else>\n      <button @click=\"stop\">stop</button>\n      <div id=\"currentSentence\" class=\"caption\">\n        {{ currentSentence }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport constants from '../lib/constants'\nimport Translator from '../lib/translator'\nimport languageListMixin from '../lib/language-list-mixin'\n\nconst speechApiKeyLocalStorageKey = 'speechApiKey'\nconst speechApiRegionStorageKey = 'speechApiRegion'\n\nexport default {\n  mixins: [ languageListMixin ],\n  data() {\n    return {\n      key: window.localStorage.getItem(speechApiKeyLocalStorageKey) || '',\n      region: window.localStorage.getItem(speechApiRegionStorageKey) || `${constants.region}`,\n      currentSentence: '',\n      started: false,\n      fromLanguage: 'en-US',\n      meetingId: this.$route.params.meetingId,\n      hostKey: this.$route.params.hostKey,\n      authToken: null,\n      meetingPassword: null,\n      origin: null\n    }\n  },\n  watch: {\n    key(newKey) {\n      window.localStorage.setItem(speechApiKeyLocalStorageKey, newKey)\n    },\n    region(newRegion) {\n      window.localStorage.setItem(speechApiRegionStorageKey, newRegion)\n    }\n  },\n  async created() {\n    this.translator = new Translator(function(captions) {\n      this.currentSentence = captions.original\n      const translations = Object.assign({\n        token: this.authToken\n      }, captions.translations)\n      axios.post(`${constants.apiBaseUrl}/api/captions?meetingId=${this.meetingId}`, translations)\n    }.bind(this))\n\n    const auth = await axios.post(`${constants.apiBaseUrl}/api/tokens/host`, {\n      meetingId: this.meetingId,\n      hostKey: this.hostKey\n    }).then(r => r.data)\n\n    this.authToken = auth.token\n    this.meetingPassword = auth.meeting.meetingPassword\n  },\n  mounted() {\n    this.origin = window.location.origin\n  },\n  methods: {\n    start() {\n      this.translator.start({\n        key: this.key,\n        region: this.region,\n        fromLanguage: this.fromLanguage,\n        toLanguages: this.toLanguages\n      })\n      console.log(this.meetingId, this.hostKey)\n      this.started = true\n    },\n    stop() {\n      this.started = false\n      this.currentSentence = ''\n      this.translator.stop()\n    }\n  },\n  beforeDestroy() {\n    this.translator.stop()\n  }\n}\n</script>\n\n<style scoped>\ninput[type=password] {\n  width: 600px;\n}\n</style>"]}]}